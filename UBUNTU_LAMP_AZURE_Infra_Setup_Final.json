{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": 
  {  
    "vmSize": 
    {
          "type": "string",
          "defaultValue": "Standard_A1",
          "allowedValues": 
          [
            "Standard_A0",
            "Standard_A1",
            "Standard_A2",
            "Standard_A3",
            "Standard_A4",
            "Standard_A5",
            "Standard_A6",
            "Standard_A7",
            "Standard_A8",
            "Standard_A9",
            "Standard_A10",
            "Standard_A11",
            "Standard_D1",
            "Standard_D2",
            "Standard_D3",
            "Standard_D4",
            "Standard_D11",
            "Standard_D12",
            "Standard_D13",
            "Standard_D14"
          ],
            "metadata": 
            {
                "description": "The size of the VM."
            }
      },
  
      "adminUsername": 
      {
          "type": "string",
          "metadata": 
          {
            "description": "User name for the Virtual Machine."
          }
      },


      "adminPassword": 
      {
          "type": "securestring",
          "metadata": 
          {
            "description": "Password for the Virtual Machine."
          }
      },
    
      "dnsLabelPrefix": 
      {
          "type": "string",
          "metadata": 
          {
            "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
          }
      },

      "ubuntuOSVersion": 
      {
          "type": "string",
          "defaultValue": "16.04.0-LTS",
          "allowedValues": 
          [
            "12.04.5-LTS",
            "14.04.5-LTS",
            "15.10",
            "16.04.0-LTS"
          ],
          "metadata": 
          {
            "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
          }
      },

      "mySqlPassword": 
      {
          "type": "securestring",
          "metadata": 
          {
            "description": "Password for the MySQL 'root' admin user."
        }
      },

      "PHPMyAdmin": 
      {
          "type": "securestring",
          "metadata": 
          {
            "description": "Password for the MySQL 'root' admin user."
        }
      },

      "sshKeyData": 
      {
          "type": "string",
          "metadata": 
          {
            "description": "SSH rsa public key file as a string."
          }
      },

      "newStorageAccountName": 
      {
          "type": "string",
          "metadata": 
          {
            "description": "newStorageAccountName"
          }
      }
    },

    "variables": 
    {  
      "imagePublisher": "Canonical",
      "imageOffer": "UbuntuServer",
      "OSDiskName": "[concat(parameters('dnsLabelPrefix'),'Disk')]",
      "nicName": "[concat(parameters('dnsLabelPrefix'),'Nic')]",
      "dataDisk1VhdName": "datadisk1",
	  "location": "[resourceGroup().location]",
      
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet",
      "subnetPrefix": "10.0.0.0/24",

      "storageAccountType": "Standard_LRS",
      "publicIPAddressName": "[concat(parameters('dnsLabelPrefix'),'IP')]",
      "publicIPAddressType": "Dynamic",

      "vmStorageAccountContainerName": "vhds",
      "vmName": "[concat(parameters('dnsLabelPrefix'),'VM')]",
      "virtualNetworkName": "[concat(parameters('dnsLabelPrefix'),'VNet')]",
      "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
      "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",

      "sshKeyPath": "[concat('/home/',parameters('adminUserName'),'/.ssh/authorized_keys')]",
      "networkSecurityGroupName": "networkSecurityGroup1",
      
      "installScriptName": "install_lamp.sh",
      "installScriptUri": "[concat('https://raw.githubusercontent.com/felipe-nunes/AZURE_CF_UBUNTU_LAMP/master/', variables('installScriptName'))]",
      "installCommand": "[concat('sh ', variables('installScriptName'), ' ', parameters('mySqlPassword'), ' ', parameters('PHPMyAdmin'))]",

      "apiVersion": "2015-06-15"

    },
    
    "resources": 
    [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[parameters('newStorageAccountName')]",
        "apiVersion": "2016-01-01",
        "location": "[resourceGroup().location]",
        "sku": { "name": "[variables('storageAccountType')]" },
          "kind": "Storage",
          "properties": {}
      },

      {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[variables('location')]",
      "properties": 
      {
        "securityRules": 
        [
        {
            	"name": "ssh_rule",
            	"properties": 
            	{
              		"description": "Locks inbound down to ssh default port 22.",
              		"protocol": "Tcp",
              		"sourcePortRange": "*",
              		"destinationPortRange": "22",
              		"sourceAddressPrefix": "*",
              		"destinationAddressPrefix": "*",
              		"access": "Allow",
              		"priority": 123,
              		"direction": "Inbound"
            	}
          	}
        ]
      	}
      },
    
      {
          "apiVersion": "2016-09-01",
          "type": "Microsoft.Network/publicIPAddresses",
          "name": "[variables('publicIPAddressName')]",
          "location": "[resourceGroup().location]",
          "properties": 
          {
            "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
            "dnsSettings": { "domainNameLabel": "[parameters('dnsLabelPrefix')]"}
          } 
      },
    
      {
          "apiVersion": "2016-09-01",
          "type": "Microsoft.Network/virtualNetworks",
          "name": "[variables('virtualNetworkName')]",
          "location": "[resourceGroup().location]",
          "properties": 
          {
            "addressSpace": {"addressPrefixes": ["[variables('addressPrefix')]"]},
            "subnets": 
            [{
              "name": "[variables('subnetName')]",
                "properties": {"addressPrefix": "[variables('subnetPrefix')]"}
              }]
          }
      },

      {
          "apiVersion": "2016-09-01",
          "type": "Microsoft.Network/networkInterfaces",
          "name": "[variables('nicName')]",
          "location": "[resourceGroup().location]",
          "dependsOn": 
          [
            "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
          ],
          "properties": 
          {
            "ipConfigurations": 
            [{
                "name": "ipconfig1",
                "properties": 
                {
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIPAddress": {"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"},
                  "subnet": {"id": "[variables('subnetRef')]"}
                }
              }
            ]
          }
        },

       {
          "apiVersion": "2016-03-30",
          "type": "Microsoft.Compute/virtualMachines",
          "name": "[variables('vmName')]",
          "location": "[resourceGroup().location]",
          "dependsOn": 
          [
            "[resourceId('Microsoft.Storage/storageAccounts/', parameters('newstorageAccountName'))]",
            "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
          ],

          "properties": 
          {
            "hardwareProfile": {"vmSize": "[parameters('vmSize')]"},
            "osProfile": 
            {
                "computerName": "[variables('vmName')]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]",
                "linuxConfiguration": 
                {
            		"disablePasswordAuthentication": "true",
            		"ssh": 
            		{
              			"publicKeys": 
              			[
                		{
                  			"path": "[variables('sshKeyPath')]",
                  			"keyData": "[parameters('sshKeyData')]"
                		}
              			]
            		}
            	}
             },

            "storageProfile": 
            {
                "imageReference": 
                {
                  "publisher": "[variables('imagePublisher')]",
                  "offer": "[variables('imageOffer')]",
                  "sku": "[parameters('ubuntuOSVersion')]",
                  "version": "latest"
                },

                "osDisk": 
                {
                  "name": "osdisk",
                  "vhd": {"uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('newstorageAccountName')), '2016-01-01').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"},
                  "caching": "ReadWrite",
                  "createOption": "FromImage"
                },

                "dataDisks": 
                [
                  {
                      "name": "datadisk1",
                      "diskSizeGB": "100",
                      "lun": 0,
                      "vhd": {"uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('newstorageAccountName')), '2016-01-01').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('dataDisk1VhdName'),'.vhd')]"},
                      "createOption": "Empty"
                  }
                ]
            },

            "networkProfile": 
            {
                "networkInterfaces": 
                [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                }
                ]
            },

            "diagnosticsProfile": 
            {
                "bootDiagnostics": 
                {
                  "enabled": "true",
                  "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('newstorageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
                }
            }
          }
        },

        {
      
      		"type": "Microsoft.Compute/virtualMachines/extensions",
      		"name": "[concat(variables('vmName'),'/newuserscript')]",
      		"apiVersion": "[variables('apiVersion')]",
      		"location": "[resourceGroup().location]",
      		"dependsOn": [ "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]" ],
      		"properties": 
      		{
        		"publisher": "Microsoft.Azure.Extensions",
        		"type": "CustomScript",
        		"typeHandlerVersion": "2.0",
        		"autoUpgradeMinorVersion": true,
        		"settings": {"fileUris": ["[variables('installScriptUri')]"]},
        		"protectedSettings": {"commandToExecute": "[variables('installCommand')]"}
      		}
    	}
    ],
    
    "outputs": 
    {  
      "hostname": 
      {
          "type": "string",
          "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
      },
    
      "sshCommand": 
      {
          "type": "string",
          "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
      }
    }
 }